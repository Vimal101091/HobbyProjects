std	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr {$/;"	namespace	line:1
shared_ptr	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr { $/;"	class	line:1	namespace:std
operator ->	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _Tp* operator->();$/;"	prototype	line:2	class:std::shared_ptr	access:private	signature:()	returns:_Tp 
reset	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr );$/;"	prototype	line:3	class:std::shared_ptr	access:private	signature:( Y* ptr )	returns:void 
reset	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d );$/;"	prototype	line:4	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d )	returns:void 
reset	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d, Alloc alloc );$/;"	prototype	line:5	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d, Alloc alloc )	returns:void 
get	C:\Users\psiva\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _T* get() const;$/;"	prototype	line:6	class:std::shared_ptr	access:private	signature:() const	returns:_T 
main	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\main.cpp	/^int main(int argc, char **argv)$/;"	function	line:4	signature:(int argc, char **argv)	returns:int 
Stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> class Stack $/;"	class	line:2
size	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    int size;$/;"	member	line:5	class:Stack	access:private
top	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    int top;$/;"	member	line:6	class:Stack	access:private
stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    T* stack;$/;"	member	line:7	class:Stack	access:private
Stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    Stack(int s);$/;"	prototype	line:10	class:Stack	access:public	signature:(int s)
~Stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    ~Stack();$/;"	prototype	line:11	class:Stack	access:public	signature:()
push	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    void push(T element);$/;"	prototype	line:12	class:Stack	access:public	signature:(T element)	returns:void 
pop	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    T pop();$/;"	prototype	line:13	class:Stack	access:public	signature:()	returns:T 
display	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    void display();$/;"	prototype	line:14	class:Stack	access:public	signature:()	returns:void 
isfull	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    bool isfull();$/;"	prototype	line:15	class:Stack	access:public	signature:()	returns:bool 
isempty	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^    bool isempty();$/;"	prototype	line:16	class:Stack	access:public	signature:()	returns:bool 
Stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> Stack<T>::Stack(int s) $/;"	function	line:19	class:Stack	signature:(int s)	returns:template Stack <T> :: 
~Stack	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> Stack<T>::~Stack() $/;"	function	line:26	class:Stack	signature:()	returns:template Stack <T> :: 
push	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> void Stack<T>::push(T element) $/;"	function	line:31	class:Stack	signature:(T element)	returns:template void Stack <T> :: 
pop	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> T Stack<T>::pop() $/;"	function	line:42	class:Stack	signature:()	returns:template T Stack <T> :: 
display	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> void Stack<T>::display() $/;"	function	line:55	class:Stack	signature:()	returns:template void Stack <T> :: 
isfull	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> bool Stack<T>::isfull() $/;"	function	line:66	class:Stack	signature:()	returns:template bool Stack <T> :: 
isempty	E:\MOOC\Udemy Courses\Datastructures\Stack\Stack\Stack_01\Stack.h	/^template <typename T> bool Stack<T>::isempty() $/;"	function	line:71	class:Stack	signature:()	returns:template bool Stack <T> :: 
